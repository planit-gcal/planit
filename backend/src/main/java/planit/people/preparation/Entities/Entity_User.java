package planit.people.preparation.Entities;

import org.hibernate.Hibernate;

import javax.persistence.*;
import java.util.LinkedHashSet;
import java.util.Objects;
import java.util.Set;

@Entity
@Table(name = "planit_user")
public class Entity_User {
    /**
     * primary key of the table, it is autogenerated.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "user_gen")
    @SequenceGenerator(name = "user_gen", sequenceName = "user_seq", allocationSize = 1)
    @Column(name = "planit_user_id", nullable = false)
    private Long user_id;
    /**
     * defines the first name of the PlanIt User
     */
    @Column(name = "name")
    private String name;
    /**
     * defines the surname of the PlanIt User
     */
    @Column(name = "surname")
    private String surname;

    /**
     * Create a helper table for the Many-Many relation between Entity_User and Entity_EventPreset
     */
    @ManyToMany
    @JoinTable(name = "planit_user_event_presets",
            joinColumns = @JoinColumn(name = "planit_user_id"),
            inverseJoinColumns = @JoinColumn(name = "id_event_preset"))
    private Set<Entity_EventPreset> entity_EventPresets = new LinkedHashSet<>();

    /**
     * Empty constructor needed by Spring.
     */
    public Entity_User() {

    }

    /**
     * constructor used to create a new person
     *
     * @param name    person first name
     * @param surname person surname
     */
    public Entity_User(String name, String surname) {
        this.name = name;
        this.surname = surname;
    }

    /**
     * Constructor used to retrieve the user object from DB
     *
     * @param user_id person Id in the DB
     * @param name    person first name
     * @param surname person surname
     */
    public Entity_User(Long user_id, String name, String surname) {
        this.user_id = user_id;
        this.name = name;
        this.surname = surname;
    }

    /**
     * Constructor used when Entity User record needs to be created in order to save it in another table as a foreign key.
     * @param user_id PlanIt User Id
     */
    public Entity_User(Long user_id) {
        this.user_id = user_id;
    }

    public Set<Entity_EventPreset> getEntity_EventPresets() {
        return entity_EventPresets;
    }

    public void setEntity_EventPresets(Set<Entity_EventPreset> entity_EventPresets) {
        this.entity_EventPresets = entity_EventPresets;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getSurname() {
        return surname;
    }

    public void setSurname(String surname) {
        this.surname = surname;
    }

    public Long getUser_id() {
        return user_id;
    }

    public void addPreset(Entity_EventPreset preset) {
        this.entity_EventPresets.add(preset);
        preset.getEntityUsers().add(this);
    }

    @Override
    public String toString() {
        return "Entity_User{" +
                "user_id=" + user_id +
                ", name='" + name + '\'' +
                ", surname='" + surname +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || Hibernate.getClass(this) != Hibernate.getClass(o)) return false;
        Entity_User that = (Entity_User) o;
        return user_id != null && Objects.equals(user_id, that.user_id);
    }

    @Override
    public int hashCode() {
        return getClass().hashCode();
    }
}
